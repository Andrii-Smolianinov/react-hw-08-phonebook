{"version":3,"file":"static/js/24.ebcf83a4.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/PhoneBookStyled.js","components/ContactForm/ContactFormStyled.js","components/ContactForm/LoaderBtn/LoaderBtnStyled.js","components/ContactForm/LoaderBtn/LoaderBtn.jsx","components/ContactForm/ContactForm.jsx","redux/filter/filterSelectors.js","components/Filter/FilterStyled.js","components/Filter/Filter.jsx","components/ContactsList/ContactListStyled.js","components/ContactsList/ContactsList.jsx","pages/contacts/Contacts.jsx"],"sourcesContent":["export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getState = ({ contacts }) => ({\n  loading: contacts.loading,\n  error: contacts.error,\n});\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n  const filteredContacts = contacts.items.filter(({ name }) => {\n    const normalizedName = name.toLocaleLowerCase();\n    const result = normalizedName.includes(normalizedFilter);\n    return result;\n  });\n  return filteredContacts;\n};\n\nexport const getLoadingStatus = state => state.contacts.loading;","import styled from 'styled-components';\n\nexport const PhoneBookStyled = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 15px;\n  font-weight: 500;\n  font-size: 16px;\n  color: #3b5998;\n  background-color: #b1c5f1;\n  @media screen and (min-width: 480px) {\n    padding: 25px;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 30px;\n  }\n\n  & h1 {\n    margin-top: 0px;\n    font-size: 34px;\n    font-weight: 750;\n    color: #3b5998;\n    text-align: center;\n  }\n  & span {\n    display: inline-block;\n    width: 30px;\n    height: 47px;\n    color: #ffff;\n    background-color: rgb(59, 89, 152);\n    border-radius: 5px;\n    text-align: end;\n    padding-right: 2px;\n  }\n\n  border: 10px solid;\n  border-image-slice: 1;\n  border-width: 5px;\n  border-image-source: linear-gradient(to left, #021aec, #fdf904ff);\n  box-shadow: #04f1e5ff 0px 15px 28px,\n    rgba(11, 31, 1, 1) 0px 15px 28px;\n`;\n","import styled from 'styled-components';\n\nexport const MainFormDiv = styled.div`\n  text-align: end;\n`;\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  display: inline-flex;\n  flex-direction: column;\n  color: #3b5998;\n  \n\n  & label {\n    margin-bottom: 15px;\n    font-size: 14px;\n\n    @media screen and (min-width: 480px) {\n      font-size: 16px;     \n    }\n  }\n\n  & input {\n    margin-bottom: 5px;\n    margin-left: 5px;\n    border: 2px solid #3b5998;\n    padding-left: 10px;\n    border-radius: 4px;\n    transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    outline: none;\n  }\n\n  & input:focus {\n    border-color: #4c94ff;\n  }\n\n  & button {\n    padding: 5px 8px;\n    margin: 20px 0 10px;    \n    width: 128px;\n    font-weight: 600;\n    color: #b1c5f1;\n    border-radius: 3px;\n    border: 2px solid #3b5998;\n    background-color: #3b5998;\n    box-shadow: 7px 0px 16px -2px rgb(6, 41, 238);\n    transition: background-color 250ms, color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    @media screen and (min-width: 768px) {\n    margin-bottom: 0;\n  }\n\n  }\n\n  button:hover {\n    color: #3b5998;\n    outline: transparent;\n    border: 2px solid #3b5998;\n    background-color: #b1c5f1;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LoaderBtn = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n  height: 15px;\n`;\n","import { Bars } from 'react-loader-spinner';\nimport { LoaderBtn } from 'components/ContactForm/LoaderBtn/LoaderBtnStyled'\n\n\nexport const LoaderButton = () => {\n  return (\n    <LoaderBtn>\n      <Bars\n        ariaLabel=\"bars-loading\"\n        height={20}\n        width={20}        \n        color=\"#b1c5f1\"\n      />\n    </LoaderBtn>\n  );\n};\n\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\n\nimport {\n  getFilteredContacts,\n  getLoadingStatus,\n} from 'redux/contacts/contactsSelectors';\nimport { Form, MainFormDiv } from 'components/ContactForm/ContactFormStyled';\nimport { LoaderButton } from 'components/ContactForm/LoaderBtn/LoaderBtn';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n  const isLoading = useSelector(getLoadingStatus);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const isDublicate = ({ name }) => {\n    const result = contacts.find(contact => contact.name === name);\n    return result;\n  };\n\n  const onAddContact = contact => {\n    if (isDublicate(contact)) {\n      return Notify.warning(\n        `Contact \"${contact.name}\" is already in the phone book!`\n      );\n    }\n    const action = addContact(contact);\n    dispatch(action);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onAddContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <MainFormDiv>\n      <h1>\n        <span className=\"spanP\">P</span>honebook\n      </h1>\n      <Form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"nameInput\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"nameInput\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n            placeholder=\"mark twain\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"numberInput\">Number</label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            id=\"numberInput\"\n            onChange={e => setNumber(e.target.value)}\n            placeholder=\"+380-11-111-1111\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </div>\n        {isLoading ? (\n          <button type=\"submit\">\n            <LoaderButton />\n          </button>\n        ) : (\n          <button type=\"submit\">Add contact</button>\n        )}\n      </Form>\n    </MainFormDiv>\n  );\n};\n\nexport { ContactForm };\n","export const getFilter = store => store.filter;","import styled from 'styled-components';\n\nexport const FilteredContacts = styled.div`\n  & label {\n    margin-bottom: 10px;\n    display: block;\n  }\n  & input {\n    margin-bottom: 15px;    \n    border: 2px solid #3b5998;\n    border-radius: 4px;\n    transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    outline: none;\n  }\n  & input:focus {\n    border-color: #4c94ff;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { getFilter } from 'redux/filter/filterSelectors';\nimport { FilteredContacts } from 'components/Filter/FilterStyled';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handelChange = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <FilteredContacts>\n      <h2>Contacts</h2>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        name=\"filter\"        \n        value={filter}\n        onChange={handelChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </FilteredContacts>\n  );\n};\n\nexport { Filter };\n","import styled from 'styled-components';\n\nexport const ContactUl = styled.ul`\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  background-color: #b1c5f1;\n  list-style: none;\n  svg {\n    margin: 5px;\n  }\n\n  li {\n    display: block;\n    height: 32px;\n    align-items: center;\n    padding-right: 5px;\n    display: grid;\n    grid-template-columns: 25px 1fr 52px;\n    font-size: 12px;\n    background-color: #b1c5f1;\n    border: 2px solid #3b5998;\n    border-radius: 5px;\n    align-items: center;\n    cursor: pointer;\n    transition: scale 250ms, color 250ms,\n      border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  li:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  li:hover {\n    scale: 1.03;\n    color: rgba(8, 4, 241, 1);\n    border-color: rgba(8, 4, 241, 1);\n    box-shadow: rgba(132, 188, 202, 1) 0px 7px 14px;\n  }\n\n  button {\n    color: #b1c5f1;\n    background-color: #3b5998;\n    border: 2px solid #3b5998;\n    border-radius: 4px;\n    border: transparent;\n    box-shadow: 7px 0px 16px -2px rgb(6, 41, 238);\n    text-align: center;\n    transition: background-color 250ms, color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  button:hover {\n    color: #3b5998;\n    background-color: #b1c5f1;\n  }\n`;\n","\nimport {  useSelector, useDispatch } from 'react-redux';\nimport { removeContact } from 'redux/operations';\nimport { getFilteredContacts } from \"redux/contacts/contactsSelectors\";\nimport { ContactUl } from 'components/ContactsList/ContactListStyled';\nimport { BsTelephoneOutbound } from 'react-icons/bs';\n\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const onRemoveContact = (id) => {\n  const action = removeContact(id);\n  dispatch(action);\n}\n\n  return (\n    <ContactUl>\n      {contacts.map(contact => (\n          <li key={contact.id}>\n            <BsTelephoneOutbound size={13} />\n            {contact.name}:<br/> \n            {contact.number}\n            <button onClick={() => onRemoveContact(contact.id)}>Delete</button>\n          </li>\n        ))}\n    </ContactUl>\n  );\n};\n\nexport { ContactList };\n\n\n","import { useSelector } from 'react-redux';\nimport {\n  getFilteredContacts,\n  getState,  \n} from 'redux/contacts/contactsSelectors';\n\nimport { PhoneBookStyled } from 'components/PhoneBookStyled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactsList/ContactsList';\n\nconst Contacts = () => {\n  const contacts = useSelector(getFilteredContacts); \n  const { loading } = useSelector(getState);\n\n  return (\n    <PhoneBookStyled>\n      <ContactForm />\n      <Filter />\n      {!loading && contacts.length > 0 && <ContactList />}\n    </PhoneBookStyled>\n  );\n};\n\nexport default Contacts;\n"],"names":["getState","contacts","loading","error","getFilteredContacts","filter","items","normalizedFilter","toLocaleLowerCase","name","includes","getLoadingStatus","state","PhoneBookStyled","styled","MainFormDiv","Form","LoaderBtn","LoaderButton","ariaLabel","height","width","color","ContactForm","dispatch","useDispatch","useSelector","isLoading","useState","setName","number","setNumber","onAddContact","contact","find","isDublicate","Notify","action","addContact","className","onSubmit","event","preventDefault","htmlFor","type","id","value","onChange","e","target","placeholder","pattern","title","required","getFilter","store","FilteredContacts","Filter","setFilter","ContactUl","ContactList","map","size","onClick","removeContact","onRemoveContact","length"],"sourceRoot":""}